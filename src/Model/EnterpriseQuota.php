<?php
/**
 * EnterpriseQuota
 *
 * PHP version 5
 *
 * @category Class
 * @package  GiteeEnterprise
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Gitee Open API
 *
 * Gitee Enterprise SDK for PHP
 *
 * OpenAPI spec version: 0.1.343
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.42
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace GiteeEnterprise\Model;

use \ArrayAccess;
use \GiteeEnterprise\ObjectSerializer;

/**
 * EnterpriseQuota Class Doc Comment
 *
 * @category Class
 * @description 获取当前企业的配额信息
 * @package  GiteeEnterprise
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EnterpriseQuota implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EnterpriseQuota';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'groupsCount' => 'int',
        'membersCount' => 'int',
        'viewersCount' => 'int',
        'projectsCount' => 'int',
        'programsCount' => 'int',
        'projectQuota' => 'int',
        'spaceQuota' => 'int',
        'memberQuota' => 'int',
        'viewerQuota' => 'int',
        'attachFileQuota' => 'int',
        'lfsQuota' => 'int',
        'attachFileUsedSpaceQuota' => 'int',
        'lfsSpaceUsedQuota' => 'int',
        'projectUsedSpaceQuota' => 'int',
        'singleFileQuota' => 'int',
        'singleProjectQuota' => 'int',
        'docSingleFileQuota' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'groupsCount' => 'int32',
        'membersCount' => 'int32',
        'viewersCount' => 'int32',
        'projectsCount' => 'int32',
        'programsCount' => 'int32',
        'projectQuota' => 'int32',
        'spaceQuota' => 'int32',
        'memberQuota' => 'int32',
        'viewerQuota' => 'int32',
        'attachFileQuota' => 'int32',
        'lfsQuota' => 'int32',
        'attachFileUsedSpaceQuota' => 'int32',
        'lfsSpaceUsedQuota' => 'int32',
        'projectUsedSpaceQuota' => 'int32',
        'singleFileQuota' => 'int32',
        'singleProjectQuota' => 'int32',
        'docSingleFileQuota' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'groupsCount' => 'groups_count',
        'membersCount' => 'members_count',
        'viewersCount' => 'viewers_count',
        'projectsCount' => 'projects_count',
        'programsCount' => 'programs_count',
        'projectQuota' => 'project_quota',
        'spaceQuota' => 'space_quota',
        'memberQuota' => 'member_quota',
        'viewerQuota' => 'viewer_quota',
        'attachFileQuota' => 'attach_file_quota',
        'lfsQuota' => 'lfs_quota',
        'attachFileUsedSpaceQuota' => 'attach_file_used_space_quota',
        'lfsSpaceUsedQuota' => 'lfs_space_used_quota',
        'projectUsedSpaceQuota' => 'project_used_space_quota',
        'singleFileQuota' => 'single_file_quota',
        'singleProjectQuota' => 'single_project_quota',
        'docSingleFileQuota' => 'doc_single_file_quota'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'groupsCount' => 'setGroupsCount',
        'membersCount' => 'setMembersCount',
        'viewersCount' => 'setViewersCount',
        'projectsCount' => 'setProjectsCount',
        'programsCount' => 'setProgramsCount',
        'projectQuota' => 'setProjectQuota',
        'spaceQuota' => 'setSpaceQuota',
        'memberQuota' => 'setMemberQuota',
        'viewerQuota' => 'setViewerQuota',
        'attachFileQuota' => 'setAttachFileQuota',
        'lfsQuota' => 'setLfsQuota',
        'attachFileUsedSpaceQuota' => 'setAttachFileUsedSpaceQuota',
        'lfsSpaceUsedQuota' => 'setLfsSpaceUsedQuota',
        'projectUsedSpaceQuota' => 'setProjectUsedSpaceQuota',
        'singleFileQuota' => 'setSingleFileQuota',
        'singleProjectQuota' => 'setSingleProjectQuota',
        'docSingleFileQuota' => 'setDocSingleFileQuota'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'groupsCount' => 'getGroupsCount',
        'membersCount' => 'getMembersCount',
        'viewersCount' => 'getViewersCount',
        'projectsCount' => 'getProjectsCount',
        'programsCount' => 'getProgramsCount',
        'projectQuota' => 'getProjectQuota',
        'spaceQuota' => 'getSpaceQuota',
        'memberQuota' => 'getMemberQuota',
        'viewerQuota' => 'getViewerQuota',
        'attachFileQuota' => 'getAttachFileQuota',
        'lfsQuota' => 'getLfsQuota',
        'attachFileUsedSpaceQuota' => 'getAttachFileUsedSpaceQuota',
        'lfsSpaceUsedQuota' => 'getLfsSpaceUsedQuota',
        'projectUsedSpaceQuota' => 'getProjectUsedSpaceQuota',
        'singleFileQuota' => 'getSingleFileQuota',
        'singleProjectQuota' => 'getSingleProjectQuota',
        'docSingleFileQuota' => 'getDocSingleFileQuota'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['groupsCount'] = isset($data['groupsCount']) ? $data['groupsCount'] : null;
        $this->container['membersCount'] = isset($data['membersCount']) ? $data['membersCount'] : null;
        $this->container['viewersCount'] = isset($data['viewersCount']) ? $data['viewersCount'] : null;
        $this->container['projectsCount'] = isset($data['projectsCount']) ? $data['projectsCount'] : null;
        $this->container['programsCount'] = isset($data['programsCount']) ? $data['programsCount'] : null;
        $this->container['projectQuota'] = isset($data['projectQuota']) ? $data['projectQuota'] : null;
        $this->container['spaceQuota'] = isset($data['spaceQuota']) ? $data['spaceQuota'] : null;
        $this->container['memberQuota'] = isset($data['memberQuota']) ? $data['memberQuota'] : null;
        $this->container['viewerQuota'] = isset($data['viewerQuota']) ? $data['viewerQuota'] : null;
        $this->container['attachFileQuota'] = isset($data['attachFileQuota']) ? $data['attachFileQuota'] : null;
        $this->container['lfsQuota'] = isset($data['lfsQuota']) ? $data['lfsQuota'] : null;
        $this->container['attachFileUsedSpaceQuota'] = isset($data['attachFileUsedSpaceQuota']) ? $data['attachFileUsedSpaceQuota'] : null;
        $this->container['lfsSpaceUsedQuota'] = isset($data['lfsSpaceUsedQuota']) ? $data['lfsSpaceUsedQuota'] : null;
        $this->container['projectUsedSpaceQuota'] = isset($data['projectUsedSpaceQuota']) ? $data['projectUsedSpaceQuota'] : null;
        $this->container['singleFileQuota'] = isset($data['singleFileQuota']) ? $data['singleFileQuota'] : null;
        $this->container['singleProjectQuota'] = isset($data['singleProjectQuota']) ? $data['singleProjectQuota'] : null;
        $this->container['docSingleFileQuota'] = isset($data['docSingleFileQuota']) ? $data['docSingleFileQuota'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets groupsCount
     *
     * @return int
     */
    public function getGroupsCount()
    {
        return $this->container['groupsCount'];
    }

    /**
     * Sets groupsCount
     *
     * @param int $groupsCount 当前企业的团队总数
     *
     * @return $this
     */
    public function setGroupsCount($groupsCount)
    {
        $this->container['groupsCount'] = $groupsCount;

        return $this;
    }

    /**
     * Gets membersCount
     *
     * @return int
     */
    public function getMembersCount()
    {
        return $this->container['membersCount'];
    }

    /**
     * Sets membersCount
     *
     * @param int $membersCount 当前企业的成员总数（不包含观察者）
     *
     * @return $this
     */
    public function setMembersCount($membersCount)
    {
        $this->container['membersCount'] = $membersCount;

        return $this;
    }

    /**
     * Gets viewersCount
     *
     * @return int
     */
    public function getViewersCount()
    {
        return $this->container['viewersCount'];
    }

    /**
     * Sets viewersCount
     *
     * @param int $viewersCount 当前企业的观察者总数
     *
     * @return $this
     */
    public function setViewersCount($viewersCount)
    {
        $this->container['viewersCount'] = $viewersCount;

        return $this;
    }

    /**
     * Gets projectsCount
     *
     * @return int
     */
    public function getProjectsCount()
    {
        return $this->container['projectsCount'];
    }

    /**
     * Sets projectsCount
     *
     * @param int $projectsCount 当前企业的仓库总数
     *
     * @return $this
     */
    public function setProjectsCount($projectsCount)
    {
        $this->container['projectsCount'] = $projectsCount;

        return $this;
    }

    /**
     * Gets programsCount
     *
     * @return int
     */
    public function getProgramsCount()
    {
        return $this->container['programsCount'];
    }

    /**
     * Sets programsCount
     *
     * @param int $programsCount 当前企业的项目总数
     *
     * @return $this
     */
    public function setProgramsCount($programsCount)
    {
        $this->container['programsCount'] = $programsCount;

        return $this;
    }

    /**
     * Gets projectQuota
     *
     * @return int
     */
    public function getProjectQuota()
    {
        return $this->container['projectQuota'];
    }

    /**
     * Sets projectQuota
     *
     * @param int $projectQuota 在企业内能创建的仓库数的总限制
     *
     * @return $this
     */
    public function setProjectQuota($projectQuota)
    {
        $this->container['projectQuota'] = $projectQuota;

        return $this;
    }

    /**
     * Gets spaceQuota
     *
     * @return int
     */
    public function getSpaceQuota()
    {
        return $this->container['spaceQuota'];
    }

    /**
     * Sets spaceQuota
     *
     * @param int $spaceQuota 当前企业套餐的仓库容量大小配额。单位：G
     *
     * @return $this
     */
    public function setSpaceQuota($spaceQuota)
    {
        $this->container['spaceQuota'] = $spaceQuota;

        return $this;
    }

    /**
     * Gets memberQuota
     *
     * @return int
     */
    public function getMemberQuota()
    {
        return $this->container['memberQuota'];
    }

    /**
     * Sets memberQuota
     *
     * @param int $memberQuota 当前企业套餐的成员数配额
     *
     * @return $this
     */
    public function setMemberQuota($memberQuota)
    {
        $this->container['memberQuota'] = $memberQuota;

        return $this;
    }

    /**
     * Gets viewerQuota
     *
     * @return int
     */
    public function getViewerQuota()
    {
        return $this->container['viewerQuota'];
    }

    /**
     * Sets viewerQuota
     *
     * @param int $viewerQuota 当前企业套餐的观察者数配额
     *
     * @return $this
     */
    public function setViewerQuota($viewerQuota)
    {
        $this->container['viewerQuota'] = $viewerQuota;

        return $this;
    }

    /**
     * Gets attachFileQuota
     *
     * @return int
     */
    public function getAttachFileQuota()
    {
        return $this->container['attachFileQuota'];
    }

    /**
     * Sets attachFileQuota
     *
     * @param int $attachFileQuota 当前企业套餐的附件配额。单位：G
     *
     * @return $this
     */
    public function setAttachFileQuota($attachFileQuota)
    {
        $this->container['attachFileQuota'] = $attachFileQuota;

        return $this;
    }

    /**
     * Gets lfsQuota
     *
     * @return int
     */
    public function getLfsQuota()
    {
        return $this->container['lfsQuota'];
    }

    /**
     * Sets lfsQuota
     *
     * @param int $lfsQuota 当前企业套餐的 LFS 套餐配额。单位：G
     *
     * @return $this
     */
    public function setLfsQuota($lfsQuota)
    {
        $this->container['lfsQuota'] = $lfsQuota;

        return $this;
    }

    /**
     * Gets attachFileUsedSpaceQuota
     *
     * @return int
     */
    public function getAttachFileUsedSpaceQuota()
    {
        return $this->container['attachFileUsedSpaceQuota'];
    }

    /**
     * Sets attachFileUsedSpaceQuota
     *
     * @param int $attachFileUsedSpaceQuota 企业附件已占用的容量。单位: 兆
     *
     * @return $this
     */
    public function setAttachFileUsedSpaceQuota($attachFileUsedSpaceQuota)
    {
        $this->container['attachFileUsedSpaceQuota'] = $attachFileUsedSpaceQuota;

        return $this;
    }

    /**
     * Gets lfsSpaceUsedQuota
     *
     * @return int
     */
    public function getLfsSpaceUsedQuota()
    {
        return $this->container['lfsSpaceUsedQuota'];
    }

    /**
     * Sets lfsSpaceUsedQuota
     *
     * @param int $lfsSpaceUsedQuota 企业 LFS 已使用的容量。单位: 兆
     *
     * @return $this
     */
    public function setLfsSpaceUsedQuota($lfsSpaceUsedQuota)
    {
        $this->container['lfsSpaceUsedQuota'] = $lfsSpaceUsedQuota;

        return $this;
    }

    /**
     * Gets projectUsedSpaceQuota
     *
     * @return int
     */
    public function getProjectUsedSpaceQuota()
    {
        return $this->container['projectUsedSpaceQuota'];
    }

    /**
     * Sets projectUsedSpaceQuota
     *
     * @param int $projectUsedSpaceQuota 企业仓库已占用的容量。单位: 兆
     *
     * @return $this
     */
    public function setProjectUsedSpaceQuota($projectUsedSpaceQuota)
    {
        $this->container['projectUsedSpaceQuota'] = $projectUsedSpaceQuota;

        return $this;
    }

    /**
     * Gets singleFileQuota
     *
     * @return int
     */
    public function getSingleFileQuota()
    {
        return $this->container['singleFileQuota'];
    }

    /**
     * Sets singleFileQuota
     *
     * @param int $singleFileQuota 当前企业套餐的单文件大小配额。单位: 兆
     *
     * @return $this
     */
    public function setSingleFileQuota($singleFileQuota)
    {
        $this->container['singleFileQuota'] = $singleFileQuota;

        return $this;
    }

    /**
     * Gets singleProjectQuota
     *
     * @return int
     */
    public function getSingleProjectQuota()
    {
        return $this->container['singleProjectQuota'];
    }

    /**
     * Sets singleProjectQuota
     *
     * @param int $singleProjectQuota 当前企业单仓库容量。单位: 兆
     *
     * @return $this
     */
    public function setSingleProjectQuota($singleProjectQuota)
    {
        $this->container['singleProjectQuota'] = $singleProjectQuota;

        return $this;
    }

    /**
     * Gets docSingleFileQuota
     *
     * @return int
     */
    public function getDocSingleFileQuota()
    {
        return $this->container['docSingleFileQuota'];
    }

    /**
     * Sets docSingleFileQuota
     *
     * @param int $docSingleFileQuota 知识库上传单文件大小配额。单位: 兆
     *
     * @return $this
     */
    public function setDocSingleFileQuota($docSingleFileQuota)
    {
        $this->container['docSingleFileQuota'] = $docSingleFileQuota;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


